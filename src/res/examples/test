fun bench(){
    var b = fun (){
        var c = clock();
        print sum(range(1,10000000));
        print("It took "+(clock()-c));
    };
    return b;
}
// bench()();
var bencher = bench();
bencher();


fun looper(){
    for(var i = 0; i<10; ++i){
        print sprint(i+"");
        for(var j = 0; j<10; ++j){
            print(j);
        }
    }
}
looper();

var a = 3;
a /= 10;
var b = fun(){
    return a;
};
print(b());

print(a <= 3 ? "yes" : "no");
var c = 10;
c >>= 3;
print(c);
var arr = [1,"H","Bruh",[fun (){ shw("bruuh");},2]];
print(arr[3][0]());

var a = 1; 
a = fun (){};
print(a);

class A {
    init(){
        print "a";
    }
    amethod(){
        print "amethod";
    }
}

class B {
    init(){
        print "b";
    }
    bmethod(){
        print "bmethod";
    }
}
class C ( B, A) {
    init(){
        super.init();
        print "c";
    }
    cmethod(){
        print "cmethod";
    }
}
var D = class : A, B, C {
    init(){
        print("d");
    }
};
print("classes");
var a = A();
var b = B();
var c = C();

var d = D();
d.cmethod();
c.amethod();
c.bmethod();
c.cmethod();

{
    print "method from a block of code";
}

var json = {
    field1: fun (){print "from field 1"; return 69;},
    "field2": "field2",
};

print(json.field1()); 
print(json.field2); 
print type([]);
print(json.field2[4]);
print([1,2,3].size());
print([1,2].get(1));

print(type(""));
print(("Hello, "+"world").get(1));
fun test(){}
print(type(fun (){}));
print(type(test));
// Arrays
fun filt(x){
    return x > 0;
}
var arr = [1,2,3];
arr.insert(0,-1);
arr.insert(0,-2);
arr.set(0,2);
arr.removeAt(0);
print arr.contains(2) ? "yes "+arr.indexOf(2) : " no ";
print(arr.filter(fun(x){
    return x > 0;
}));
print(arr);
arr.forEach(fun(element){print element;});
print(arr.map(fun(element){ return element * element;}));
print(arr.map(fun(index, element){ return element * index;}));
print(arr.reverse());
print(arr.reverse().sort());
var myComparator = fun(a, b) {
    if (a < b) return -1;
    if (a > b) return 1;
    return 0;
};
print("arr with comparator "+arr.sortWithComparator(myComparator));
print("reduce result " + arr.reduce(fun(accumulator, element){ return accumulator + element; } , 0));
// Strings
var str = "Hello,1 strings!";
print(str);
print(str.contains("Hello"));
print(str.toUpperCase());
print(str.toLowerCase());
print(str.startsWith("H"));
print(str.endsWith("!"));
print(str.replace("e", "A"));
print(str.trim());
print(str.substring(0,3));
print(str.indexOf("1"));
print(str[-1]);print([1,2,3][-2]);
var char = 'a';
print(type('1' + '2'));
print(all([1,2,3], fun(n){ return n>0;}));
print(any([1,2,3], fun(n) { return n < 0;}));
print(type(array("ayoub")[1]));
print(array("achak"));
print(map([1,2,3], fun (n){ return sqrt(n);}));
print(filter([0,1,2,3], fun (n){ return n <= 0;}));
print(reduce([1,2,3], fun (a, b){ return a * b;}, 1));

print("ayoub".get(2));
// print('a'.isDigit());
print(3 ** 3 == pow(3, 3));
var arr = [3,4,2,7,2];
var str = "ayouble";
print("Sorting..");
sort(arr);
sort(str);
print(arr);
print(str);
print("Reversing..");
reverse(arr);
reverse(str);
print(arr);
print(str);
var a = 'a';
print(type(a));
print(methods(a));
print(a.isDigit());